
<div id="map" style="width: 100%; height: 400px"></div>

<!-- Start,End, Method,Timing -->
<form method="patch">
    <div class="row trans-radio-button-group">
        <div class="col-sm-6 trans-radio-button">
            <label class="radio-inline">
                    <input type="radio" name="optradio" id="publicTransit" checked>Public Transit
            </label>
        </div>
        <div class="col-sm-6 trans-radio-button">
            <label class="radio-inline">
                    <input type="radio" name="optradio" id="driving">Taxi/Rideshare
            </label>
        </div>
    </div>
    <div class="form-group">
      <label>Start Location</label>
      <input type="text" class="form-control" id="start-location"  placeholder="<%= trip.start %>">
    </div>
    <div class="form-group">
      <label>End Location</label>
      <input type="text" class="form-control" id="end-location" placeholder="<%= trip.end %>">
    </div>
    <!-- need Method, Timing -->
    <!-- Upon click, add new field for method/timing -->
    <div class="row" >
        <div class="" id="settings">
            <div class="col-sm-3">
                <label>Calculate Alarm Time</label>
                <select class="custom-select time-method-select form-control alarm-setting" id="time-method">
                        <option selected>Time Method</option>
                        <option value="1" <% if (trip.timing =='By Distance') { %> selected="selected"<% } %>>By Distance</option>
                        <option value="2" <% if (trip.timing =='By Time') { %> selected="selected"<% } %>>By Time</option>
                </select>
            </div>
            <div class="col-sm-3">
                <label>Alarm Method</label>
                <select class="custom-select alarm-method-select form-control alarm-setting" id="alarm-method">
                        <option selected>Alarm Option</option>
                        <option value="1" <% if (trip.method =='Call') { %> selected="selected"<% } %>>Call</option>
                        <option value="2" <% if (trip.method =='Text') { %> selected="selected"<% } %>>Text</option>
                </select>
            </div >
            <!-- this will change base on first dropdown select -->
            <div class="col-sm-3">
                <div class="form-group alarm-setting">
                        <label>Alert Me</label>
                        <input type="number" class="form-control" id="" placeholder="5 minutes before">
                </div>
            </div>
        </div>
        <div class="col-sm-3">
            <label for="">Add Another Alarm</label><br>
            <button class="btn" id="response-setting-add">+</button>
        </div>
    
    </div>
    <br>
    <button type="submit" class="btn btn-primary" id="update-trip-submit">Submit</button>
</form>



<script>
        var thisTrip
        
        $.ajax({url:'/trips/<%= trip.id %>/json', method: 'get'}).done((res)=>{
            thisTrip = res
        })  

        //---------------------------------------------------------
            //my google stuff here
            var startInput = document.getElementById('start-location')
            var endInput = document.getElementById('end-location')
            $publicTransitRadioEl = $('#publicTransit')
           

            var options = {

            }

            startAutoComplete = new google.maps.places.Autocomplete(startInput, options)
            endAutoComplete = new google.maps.places.Autocomplete(endInput, options)
        //---------------------------------------------------------
            //copied google code
        var directionsDisplay
        var directionsService = new google.maps.DirectionsService()
        var map
        var infoWindow

      
        
        function handleLocationError(browserHasGeolocation, infoWindow, pos) {
            infoWindow.setPosition(pos);
            infoWindow.setContent(browserHasGeolocation ?
                                  'Error: The Geolocation service failed.' :
                                  'Error: Your browser doesn\'t support geolocation.');
            infoWindow.open(map);
          }
        
        function initialize() {

            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(function(position) {
                  var pos = {
                    lat: position.coords.latitude,
                    lng: position.coords.longitude
                  };
      
                  infoWindow.setPosition(pos);
                  infoWindow.setContent('Location found.');
                  infoWindow.open(map);
                  map.setCenter(pos);
                }, function() {
                  handleLocationError(true, infoWindow, map.getCenter());
                });
              } else {
                // Browser doesn't support Geolocation
                handleLocationError(false, infoWindow, map.getCenter());
              }


          directionsDisplay = new google.maps.DirectionsRenderer();
          //center on  start location
          var chicago = new google.maps.LatLng(41.850033, -87.6500523);
          var mapOptions = {
            zoom:7,
            center: chicago
          }
          map = new google.maps.Map(document.getElementById('map'), mapOptions);
          infoWindow = new google.maps.InfoWindow;
          directionsDisplay.setMap(map);
          
        }
        //-------------------------
        

        function calcRoute() {
          var start = document.getElementById('start-location').value || thisTrip.start;
          var end = document.getElementById('end-location').value || thisTrip.end;
          var travelMode
          if($publicTransitRadioEl.prop("checked")){
            travelMode = "TRANSIT"
          }
          else{
              travelMode = "DRIVING"
          }
          
          var request = {
            origin: start,
            destination: end,
            travelMode: travelMode
          };
          directionsService.route(request, function(result, status) {
            if (status == 'OK') {
              directionsDisplay.setDirections(result);
            }
          });
        }
        
        initialize()

        //----------------------------------------------------------
       
        //if contents of select option equal value from database, give it selected property
        $updateTrip = $('#update-trip-submit')
        $addResponseEl = $('#response-setting-add')
        $startPH = $('#start-location')

        $addResponseEl.click((evt)=>{
            evt.preventDefault()
            //want method(dropdown), amount of time before(number form), and lastly calculation method(dropdown)
            $('<br><button>Hey</button>').insertAfter($addResponseEl)
            console.log('I was clicked')
        })
    
        
        
        //upon click, append the new fields to form
        $updateTrip.click((evt)=>{
            evt.preventDefault()
            //if blank, don't change to blank!
            $start = $('#start-location').val() || thisTrip.start
            $end = $('#end-location').val() || thisTrip.end
            
            //put values intro form data
            var updatedTrip = {
                start: $start,
                end: $end,
                method: $(".alarm-method-select option:selected")[0].text,
                timing: $(".time-method-select option:selected")[0].text,
            }
            //send it!
            console.log('tried to update trip')
            $.ajax({url:'/trips/<%= trip.id %>',data: updatedTrip, method: "patch"}).done((res)=>{
                console.log("response", res)
                //-----Google Distance Matrix Code----
                var travelMode
                if($publicTransitRadioEl.prop("checked")){
                  travelMode = "TRANSIT"
                }
                else{
                    travelMode = "DRIVING"
                }
                    //fake origin and destination
                    var origin = document.getElementById('start-location').value || thisTrip.start
                    var destination = document.getElementById('end-location').value || thisTrip.end

                var service = new google.maps.DistanceMatrixService();
                service.getDistanceMatrix(
                    {
                        origins: [origin],
                        destinations: [destination],
                        travelMode: travelMode,
                    }, function callback(response, status) {
                        if (status == 'OK') {
                            console.log("distance matrix", response)
                            //harold calls setTimeout after calculating time differential
                        }
                      })
                //----------------------------------------
            })
        }) 
</script>